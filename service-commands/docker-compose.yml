version: '3.8'

services:
  db:
    container_name: service-commands-db
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: commandes_db
      MYSQL_USER: user
      MYSQL_PASSWORD: userpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: always
    networks:
      - app-network

  db_test:
    container_name: service-commands-db_test
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: commandes_db_test
      MYSQL_USER: user
      MYSQL_PASSWORD: userpassword
    ports:
      - "3307:3306" # Port diff√©rent pour la base de test
    volumes:
      - mysql_data_test:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app-network

  service-commands:
    build:
      context: .
      dockerfile: docker/node/Dockerfile
    ports:
      - "3004:3004"
    depends_on:
      - db
      - db_test
    env_file:
      - .env
    networks:
      - app-network
    restart: always
    entrypoint: ["sh", "-c", "while ! nc -z db 3306; do sleep 1; done; while ! nc -z db_test 3306; do sleep 1; done; node src/app.js"]  

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: db
      PMA_USER: user
      PMA_PASSWORD: userpassword
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - app-network

volumes:
  mysql_data:
  mysql_data_test:

networks:
  app-network:
